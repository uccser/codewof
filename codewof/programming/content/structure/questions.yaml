say-hello:
  type: program
  test-cases:
    1: normal
  difficulty: difficulty-0
  concepts:
    - display-text

# ride-share:
#   type: function
#   test-cases:
#     1: normal
#     2: normal

# TODO: Skulpt has issues with round function compared to Python so needs further testing
# rugby-score:
#   type: function
#   test-cases:
#     1: normal
#     2: normal

# TODO: Skulpt has issues with round function compared to Python so needs further testing
# car-park:
#   type: function
#   test-cases:
#     1: normal
#     2: normal

add-10:
  type: program
  test-cases:
    1: normal
    2: normal
  difficulty: difficulty-0
  concepts:
    - display-text
    - inputs
  contexts:
    - simple-mathematics

doubler:
  type: function
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: exceptional
  difficulty: difficulty-1
  concepts:
    - functions
  contexts:
    - simple-mathematics

double-evens:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - "if number // 2 == 0:"
    - "return number x 2"
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: exceptional
  difficulty: difficulty-1
  concepts:
    - single-condition
    - functions
  contexts:
    - simple-mathematics

countdown:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - "for i in range(num):"
    - "while num > 1:"
  test-cases:
    1: normal
    2: normal
    3: exceptional
  difficulty: difficulty-2
  concepts:
    - display-text
    - functions
    - single-condition
    - conditional-loops
  contexts:
    - simple-mathematics

repeated-add-10:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: exceptional
  difficulty: difficulty-1
  concepts:
    - display-text
    - inputs
    - single-condition
    - conditional-loops
  contexts:
    - simple-mathematics

factorial:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
  difficulty: difficulty-3
  concepts:
    - functions
    - multiple-conditions
    - conditional-loops
  contexts:
    - advanced-mathematics

ticket-calculator:
  type: debugging
  number_of_read_only_lines_top: 1
  number_of_read_only_lines_bottom: 1
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
  difficulty: difficulty-0
  concepts:
    - functions
    - multiple-conditions
  contexts:
    - real-world-applications

rectangle-area:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: normal
  difficulty: difficulty-1
  concepts:
    - display-text
    - inputs
  contexts:
    - simple-mathematics

where-is:
  types:
    - program
  test-cases:
    1: normal
    2: normal
  difficulty: difficulty-1
  concepts:
    - display-text
    - inputs
    - string-operations

pieces-of-chocolate:
  types:
    - function
  test-cases:
    1: normal
    2: normal
  difficulty: difficulty-1
  concepts:
    - functions
  contexts:
    - simple-mathematics

print-codewof:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - 'print("Welcome to codeWOF")'
    - 'return "Welcome to codeWOF!"'
  test-cases:
    1: normal
  difficulty: difficulty-1
  concepts:
    - functions
    - display-text

greeting:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - 'print("Hello" + name + "!")'
    - 'print("Hello " + name)'
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-1
  concepts:
    - display-text
    - functions
    - string-operations

string-concatenation:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: exceptional
  difficulty: difficulty-1
  concepts:
    - display-text
    - inputs
    - string-operations

bus-info:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - 'print("Service " + bus_id + " is due in " + str(minutes_away) + " minutes time.")'
    - 'return "Service " + bus_id + " is due in " + minutes_away + " minutes time."'
  test-cases:
    1: normal
    2: exceptional
    3: normal
    4: exceptional
  difficulty: difficulty-1
  concepts:
    - functions
    - string-operations
  contexts:
    - real-world-applications

voting-age:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: exceptional
    4: exceptional
    5: exceptional
    6: exceptional
  difficulty: difficulty-1
  concepts:
    - display-text
    - inputs
  contexts:
    - real-world-applications

over-the-limit:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - 'return "True"'
    - 'return "False"'
    - "if mcg_per_litre >= 250:"
  test-cases:
    1: normal
    2: normal
    3: exceptional
    4: exceptional
    5: exceptional
    6: exceptional
    7: exceptional
  difficulty: difficulty-1
  concepts:
    - functions
    - single-condition
  contexts:
    - real-world-applications

low-battery:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - "if percent <= 20:"
    - 'is_low = "True"'
    - 'is_low = "False"'
  test-cases:
    1: normal
    2: exceptional
    3: exceptional
    4: normal
    5: exceptional
    6: exceptional
  difficulty: difficulty-1
  concepts:
    - functions
    - single-condition
  contexts:
    - real-world-applications

full-name:
  type: debugging
  number_of_read_only_lines_top: 1
  number_of_read_only_lines_bottom: 0
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - functions
    - string-operations
  contexts:
    - real-world-applications

hours-to-seconds:
  type: debugging
  number_of_read_only_lines_top: 1
  number_of_read_only_lines_bottom: 1
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
  difficulty: difficulty-0
  concepts:
    - functions
  contexts:
    - simple-mathematics
    - real-world-applications

how-many-dozens:
  type: debugging
  number_of_read_only_lines_top: 1
  number_of_read_only_lines_bottom: 0
  test-cases:
    1: normal
    2: normal
    3: exceptional
    4: exceptional
    5: exceptional
  difficulty: difficulty-2
  concepts:
    - functions
  contexts:
    - simple-mathematics
    - real-world-applications

favourite-number:
  type: debugging
  number_of_read_only_lines_top: 1
  number_of_read_only_lines_bottom: 1
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
    6: normal
    7: normal
    8: normal
  difficulty: difficulty-2
  concepts:
    - functions
    - single-condition

string-too-long:
  type: debugging
  number_of_read_only_lines_top: 1
  number_of_read_only_lines_bottom: 1
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
    6: normal
    7: normal
  difficulty: difficulty-1
  concepts:
    - functions
    - single-condition
  contexts:
    - real-world-applications

price-in-budget:
  type: debugging
  number_of_read_only_lines_top: 1
  number_of_read_only_lines_bottom: 1
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
    6: normal
  difficulty: difficulty-2
  concepts:
    - functions
    - single-condition
  contexts:
    - real-world-applications

find-highest-number:
  type: debugging
  number_of_read_only_lines_top: 1
  number_of_read_only_lines_bottom: 1
  test-cases:
    1: normal
    2: normal
    3: normal
    4: exceptional
    5: exceptional
  difficulty: difficulty-2
  concepts:
    - lists
    - range-loops
    - single-condition
  context:
    - simple-mathematics
    - real-world-applications

shutdown-machine:
  type: program
  test-cases:
    1: exceptional
    2: exceptional
    3: normal
    4: normal
    5: exceptional
    6: exceptional
  difficulty: difficulty-2
  concepts:
    - display-text
    - inputs
    - single-condition
    - conditional-loops
  contexts:
    - real-world-applications

triangle-pattern:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - "for i in range(1, x):"
    - 'print(" ")'
    - 'print("*")'
    - 'print(i * " ")'
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - functions
    - multiple-conditions

divisible-by-3:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
  difficulty: difficulty-3
  concepts:
    - display-text
    - functions
    - single-condition
    - range-loops
    - lists
  contexts:
    - simple-mathematics

reverse-string:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - "for char in range(len(string), -1, -1):"
    - "for char in range(len(string) - 1, 1, 1):"
    - "print(string[char])"
  test-cases:
    1: normal
    2: normal
    3: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - functions
    - range-loops
    - string-operations

rotate-words:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: exceptional
    4: normal
  difficulty: difficulty-1
  concepts:
    - display-text
    - inputs
    - range-loops
    - string-operations

good-password:
  types:
    - program
  test-cases:
    1: exceptional
    2: exceptional
    3: normal
    4: normal
    5: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - inputs
    - single-condition
    - conditional-loops
  contexts:
    - real-world-applications

shopping-list:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - functions
    - range-loops
    - string-operations
    - lists
  contexts:
    - real-world-applications

find-smallest-number:
  types:
    - debugging
  number_of_read_only_lines_top: 1
  number_of_read_only_lines_bottom: 0
  test-cases:
    1: exceptional
    2: normal
    3: exceptional
    4: normal
    5: normal
  difficulty: difficulty-1
  concepts:
    - functions
    - single-condition
    - range-loops
    - lists
  contexts:
    - simple-mathematics
    - real-world-applications

book-titles:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - "print(name.upper())"
    - "print(name.lower())"
    - "print(name)"
  test-cases:
    1: normal
    2: normal
    3: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - functions
    - range-loops
    - string-operations
    - lists
  contexts:
    - real-world-applications

total-under-10:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - "if number > 10:"
    - "total = number"
  test-cases:
    1: normal
    2: normal
    3: exceptional
    4: normal
  difficulty: difficulty-2
  concepts:
    - functions
    - single-condition
    - range-loops
    - lists
  contexts:
    - simple-mathematics

go-tramping:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: normal
    4: exceptional
    5: exceptional
    6: exceptional
  difficulty: difficulty-2
  concepts:
    - display-text
    - inputs
    - multiple-conditions
  contexts:
    - simple-mathematics
    - real-world-applications

make-even:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: exceptional
    6: exceptional
  difficulty: difficulty-2
  concepts:
    - display-text
    - inputs
    - multiple-conditions
  contexts:
    - simple-mathematics

print-score:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - "score = points / total_possible"
    - "score = points * total_possible / 100"
    - "print(score)"
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - functions
    - string-operations
  contexts:
    - simple-mathematics
    - real-world-applications

h-words:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: normal
    4: exceptional
  difficulty: difficulty-1
  concepts:
    - display-text
    - inputs
    - single-condition
    - string-operations

print-pet:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - 'print(name + "is a " + age + "-year-old " + species + ".")'
    - 'print(name + "is a " + "age" + "-year-old " + species + ".")'
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - functions
    - string-operations
  contexts:
    - real-world-applications

print-squares:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - "print(num ^ 2)"
    - "print(num x num)"
  test-cases:
    1: normal
    2: normal
    3: normal
    4: exceptional
    5: exceptional
  difficulty: difficulty-1
  concepts:
    - display-text
    - functions
    - inputs
    - range-loops
    - lists
  contexts:
    - simple-mathematics

drawn-out-string:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - "print(letter + letter)"
    - "print(length)"
    - "print(letter)"
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-1
  concepts:
    - range-loops
    - functions
    - string-operations
    - display-text

add-up-numbers:
  types:
    - debugging
  number_of_read_only_lines_top: 1
  number_of_read_only_lines_bottom: 0
  test-cases:
    1: normal
    2: normal
    3: exceptional
    4: exceptional
    5: normal
  difficulty: difficulty-1
  concepts:
    - display-text
    - functions
    - range-loops
    - lists
  contexts:
    - simple-mathematics

evens-out:
  types:
    - debugging
  number_of_read_only_lines_top: 3
  number_of_read_only_lines_bottom: 1
  test-cases:
    1: normal
    2: normal
    3: exceptional
    4: exceptional
    5: normal
  difficulty: difficulty-1
  concepts:
    - functions
    - single-condition
    - range-loops
    - lists
  contexts:
    - simple-mathematics

happy-birthday:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: exceptional
  difficulty: difficulty-1
  concepts:
    - display-text
    - inputs
    - string-operations
  contexts:
    - simple-mathematics
    - real-world-applications

give-me-5:
  types:
    - program
  test-cases:
    1: normal
    2: exceptional
    3: normal
    4: normal
    5: normal
  difficulty: difficulty-1
  concepts:
    - display-text
    - inputs
    - single-condition
    - conditional-loops

while-away:
  types:
    - debugging
  number_of_read_only_lines_top: 2
  number_of_read_only_lines_bottom: 0
  test-cases:
    1: normal
    2: exceptional
    3: normal
    4: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - functions
    - single-condition
    - conditional-loops

times-2:
  types:
    - debugging
  number_of_read_only_lines_top: 1
  number_of_read_only_lines_bottom: 0
  test-cases:
    1: normal
    2: exceptional
    3: normal
    4: exceptional
    5: normal
    6: exceptional
  difficulty: difficulty-2
  concepts:
    - functions
  contexts:
    - simple-mathematics

days-to-target:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - "population * 2"
    - "population = population ** 2"
    - "print(days)"
  test-cases:
    1: normal
    2: normal
    3: exceptional
    4: normal
    5: normal
  difficulty: difficulty-3
  concepts:
    - functions
    - single-condition
    - conditional-loops
  contexts:
    - advanced-mathematics
    - real-world-applications

roll-call:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - "print(name.title())"
    - "print(name.capitalize())"
    - "print(name.swapcase())"
  test-cases:
    1: normal
    2: normal
    3: normal
    4: exceptional
  difficulty: difficulty-1
  concepts:
    - display-text
    - functions
    - range-loops
    - string-operations
    - lists
  contexts:
    - real-world-applications

lunch:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - inputs
    - single-condition
    - string-operations
  contexts:
    - real-world-applications

signature:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - inputs
    - string-operations
  contexts:
    - real-world-applications

print-bigger-number:
  types:
    - debugging
  number_of_read_only_lines_top: 1
  number_of_read_only_lines_bottom: 0
  test-cases:
    1: normal
    2: normal
    3: normal
    4: exceptional
    5: exceptional
  difficulty: difficulty-2
  concepts:
    - display-text
    - functions
    - single-condition
  contexts:
    - simple-mathematics

rectangle-pattern:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - "for i in range(width):"
    - 'print("height * "#")'
    - 'print("#")'
    - "print(width * height)"
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-1
  concepts:
    - display-text
    - functions
    - single-condition
    - range-loops
  contexts:
    - basic-geometry

leap-year:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
    4: exceptional
  difficulty: difficulty-2
  concepts:
    - functions
    - advanced-conditionals
  contexts:
    - advanced-mathematics
    - real-world-applications

discounted-cost:
  types:
    - debugging
  number_of_read_only_lines_top: 1
  number_of_read_only_lines_bottom: 2
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-2
  concepts:
    - functions
  contexts:
    - simple-mathematics
    - real-world-applications

celsius-to-fahrenheit:
  type: function
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
  difficulty: difficulty-1
  concepts:
    - functions
  contexts:
    - simple-mathematics
    - real-world-applications

fahrenheit-to-celsius:
  type: function
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
  difficulty: difficulty-1
  concepts:
    - functions
  contexts:
    - simple-mathematics
    - real-world-applications

rollercoaster-ride:
  types:
    - function
    - parsons
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - functions
    - multiple-conditions
  contexts:
    - simple-mathematics
    - real-world-applications

how-many-dogs:
  types:
    - debugging
  number_of_read_only_lines_top: 2
  number_of_read_only_lines_bottom: 1
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-1
  concepts:
    - functions
    - single-condition
    - range-loops
    - string-operations
    - lists
  contexts:
    - simple-mathematics
    - real-world-applications

total-evens:
  types:
    - debugging
  number_of_read_only_lines_top: 1
  number_of_read_only_lines_bottom: 0
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-1
  concepts:
    - functions
    - single-condition
    - range-loops
    - lists
  contexts:
    - simple-mathematics

driver-speed:
  types:
    - function
    - parsons
  test-cases:
    1: normal
    2: normal
    3: normal
  difficulty: difficulty-2
  concepts:
    - advanced-conditionals
    - functions
  contexts:
    - real-world-applications

fizz-buzz:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - "elif num / 3 == 0:"
    - "elif num / 5 == 0:"
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - functions
    - advanced-conditionals
  contexts:
    - simple-mathematics

inside-outside:
  type: debugging
  number_of_read_only_lines_top: 1
  number_of_read_only_lines_bottom: 0
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - functions
    - multiple-conditions
  contexts:
    - simple-mathematics

eight-is-great:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - "if a or b == 8:"
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - functions
    - multiple-conditions
  contexts:
    - simple-mathematics

sum-lucky-7:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
  difficulty: difficulty-3
  concepts:
    - display-text
    - functions
    - single-condition
    - range-loops
    - lists
  contexts:
    - simple-mathematics

duck-goose:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - inputs
    - multiple-conditions
    - string-operations

remove-bugs:
  types:
    - debugging
  number_of_read_only_lines_top: 1
  number_of_read_only_lines_bottom: 0
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-3
  concepts:
    - functions
    - single-condition
    - range-loops
    - lists

nth-to-last:
  types:
    - debugging
  number_of_read_only_lines_top: 1
  number_of_read_only_lines_bottom: 1
  test-cases:
    1: normal
    2: normal
    3: normal
  difficulty: difficulty-2
  concepts:
    - functions
    - lists

factorial-debug:
  types:
    - debugging
  number_of_read_only_lines_top: 3
  number_of_read_only_lines_bottom: 3
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
  difficulty: difficulty-3
  concepts:
    - functions
    - multiple-conditions
    - conditional-loops
  contexts:
    - advanced-mathematics

sum-unlucky-7:
  types:
    - debugging
  number_of_read_only_lines_top: 3
  number_of_read_only_lines_bottom: 1
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
  difficulty: difficulty-3
  concepts:
    - display-text
    - functions
  contexts:
    - simple-mathematics

pass-the-parcel:
  types:
    - debugging
  number_of_read_only_lines_top: 1
  number_of_read_only_lines_bottom: 1
  test-cases:
    1: normal
    2: normal
    3: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - functions
    - range-loops
    - lists

end-of-file:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - "return file"
    - 'file += "EOF"'
  test-cases:
    1: normal
    2: normal
    3: exceptional
  difficulty: difficulty-1
  concepts:
    - functions
    - lists

is-this-the-end:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - "print(x == y)"
    - "y -= 1"
    - "y = items[index]"
  test-cases:
    1: normal
    2: normal
    3: normal
    4: exceptional
  difficulty: difficulty-3
  concepts:
    - functions
    - multiple-conditions
    - lists

long-count:
  types:
    - parsons
  parsons-extra-lines:
    - "length = 1"
    - "return items"
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-2
  concepts:
    - functions
    - range-loops
    - lists
  contexts:
    - simple-mathematics

playing-card:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - inputs
    - single-condition
    - conditional-loops
    - lists
  contexts:
    - real-world-applications

marco-polo:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: normal
  difficulty: difficulty-1
  concepts:
    - display-text
    - inputs
    - single-condition
    - conditional-loops

say-kia-ora:
  types:
    - program
  test-cases:
    1: normal
  difficulty: difficulty-0
  concepts:
    - display-text

favourite-food:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: normal
  difficulty: difficulty-1
  concepts:
    - display-text
    - inputs
    - string-operations

even-or-odd:
  types:
    - function
  test-cases:
    1: exceptional
    2: normal
    3: normal
    4: exceptional
    5: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - functions
    - single-condition
  contexts:
    - simple-mathematics

less-than-6:
  types:
    - function
  test-cases:
    1: normal
    2: exceptional
    3: normal
    4: exceptional
    5: exceptional
  difficulty: difficulty-2
  concepts:
    - display-text
    - functions
    - single-condition
    - range-loops
    - lists
  contexts:
    - simple-mathematics

best-paper-scissors-rock:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: normal
  difficulty: difficulty-1
  concepts:
    - display-text
    - inputs
    - multiple-conditions
  contexts:
    - real-world-applications

guessing-game:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: exceptional
    4: normal
    5: normal
    6: exceptional
  difficulty: difficulty-2
  concepts:
    - display-text
    - inputs
    - multiple-conditions
  contexts:
    - simple-mathematics

rectangle-perimeter:
  types:
    - debugging
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-1
  concepts:
    - functions
  contexts:
    - simple-mathematics
    - basic-geometry

square-perimeter:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
  difficulty: difficulty-1
  concepts:
    - functions
  contexts:
    - simple-mathematics
    - basic-geometry

square-area:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
  difficulty: difficulty-2
  concepts:
    - functions
  contexts:
    - simple-mathematics
    - basic-geometry

simple-calculator:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-3
  concepts:
    - functions
    - advanced-conditionals
  contexts:
    - advanced-mathematics

vertical-line:
  types:
    - function
  test-cases:
    1: normal
    2: normal
  difficulty: difficulty-3
  concepts:
    - functions
    - single-condition
  contexts:
    - advanced-mathematics

horizontal-line:
  types:
    - function
  test-cases:
    1: normal
    2: normal
  difficulty: difficulty-3
  concepts:
    - functions
    - single-condition
  contexts:
    - advanced-mathematics

acceleration-calculator:
  type: debugging
  number_of_read_only_lines_top: 1
  number_of_read_only_lines_bottom: 0
  test-cases:
    1: normal
    2: normal
  difficulty: difficulty-2
  concepts:
    - functions
  contexts:
    - advanced-mathematics

can-afford:
  type: debugging
  number_of_read_only_lines_top: 3
  number_of_read_only_lines_bottom: 2
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-2
  concepts:
    - functions
    - multiple-conditions
  contexts:
    - simple-mathematics
    - real-world-applications

mountain-climbing:
  types:
    - parsons
  parsons-extra-lines:
    - "while current_height <= height:"
    - "current_height += height"
  test-cases:
    1: normal
    2: normal
    3: normal
  difficulty: difficulty-3
  concepts:
    - functions
    - single-condition
    - conditional-loops
  contexts:
    - simple-mathematics

first-letters:
  types:
    - parsons
  parsons-extra-lines:
    - "result += words[0]"
  test-cases:
    1: normal
    2: normal
    3: normal
  difficulty: difficulty-3
  concepts:
    - functions
    - range-loops
    - string-operations

is-a-divisor:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: normal
  difficulty: difficulty-3
  concepts:
    - display-text
    - inputs
    - single-condition
    - conditional-loops
    - string-operations
  contexts:
    - advanced-mathematics

# TODO: Make it require a for loop
largest-number:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - inputs
    - multiple-conditions
    - range-loops
  contexts:
    - simple-mathematics

print-burger:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
  difficulty: difficulty-1
  concepts:
    - display-text
    - functions
    - range-loops
    - lists

shout-it:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: normal
  difficulty: difficulty-1
  concepts:
    - display-text
    - inputs
    - string-operations

fancy-divider-one:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - functions
    - string-operations

fancy-divider-two:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - functions
    - string-operations

driving-danger-level:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - functions
    - multiple-conditions
  contexts:
    - real-world-applications

driving-danger-level-debug:
  types:
    - debugging
  number_of_read_only_lines_top: 6
  number_of_read_only_lines_bottom: 0
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - functions
    - multiple-conditions
    - string-operations
  contexts:
    - real-world-applications

plural-words:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - inputs
    - single-condition
    - conditional-loops
    - string-operations
  contexts:
    - real-world-applications

are-we-there-yet:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: exceptional
    4: normal
    5: exceptional
    6: normal
  difficulty: difficulty-2
  concepts:
    - display-text
    - inputs
    - single-condition
    - conditional-loops

how-many-names:
  types:
    - debugging
  number_of_read_only_lines_top: 3
  number_of_read_only_lines_bottom: 0
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-2
  concepts:
    - functions
    - single-condition
    - range-loops
    - string-operations
    - lists

triangle-perimeter:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
  difficulty: difficulty-1
  concepts:
    - functions
  contexts:
    - basic-geometry
    - simple-mathematics

add-gst:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-1
  concepts:
    - functions
  contexts:
    - simple-mathematics

bookends:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
  difficulty: difficulty-2
  concepts:
    - functions
    - range-loops
    - lists

clean-room:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - 'if item in dirty_items:'
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
  difficulty: difficulty-3
  concepts:
    - functions
    - single-condition
    - range-loops
    - lists
  contexts:
    - real-world-applications

clean-room-debug:
  types:
    - debugging
  number_of_read_only_lines_top: 3
  number_of_read_only_lines_bottom: 1
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
  difficulty: difficulty-2
  concepts:
    - functions
    - single-condition
    - range-loops
    - lists
  contexts:
    - real-world-applications

divisible-by-six:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
  difficulty: difficulty-3
  concepts:
    - display-text
    - functions
    - multiple-conditions
  contexts:
    - advanced-mathematics

teenagers:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
    6: normal
  difficulty: difficulty-1
  concepts:
    - display-text
    - inputs
    - single-condition
  contexts:
    - simple-mathematics

storage-full:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: exceptional
    6: exceptional
    7: normal
  difficulty: difficulty-2
  concepts:
    - functions
    - single-condition
  contexts:
    - simple-mathematics

how-many-seats:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - 'elif vehicle == "truck":'
    - 'else:'
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
  difficulty: difficulty-3
  concepts:
    - functions
    - advanced-conditionals
    - range-loops
    - lists
  contexts:
    - simple-mathematics
    - real-world-applications

valid-pin:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
  difficulty: difficulty-2
  concepts:
    - functions
    - multiple-conditions
    - string-operations
  contexts:
    - real-world-applications

estimate-legs:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: normal
    4: exceptional
  difficulty: difficulty-1
  concepts:
    - display-text
    - inputs
  contexts:
    - simple-mathematics
    - real-world-applications

does-it-ascend:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - 'for i in range(0, len(items)):'
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
  difficulty: difficulty-3
  concepts:
    - functions
    - single-condition
    - range-loops
    - lists
  contexts:
    - simple-mathematics

does-it-descend:
  types:
    - debugging
  number_of_read_only_lines_top: 3
  number_of_read_only_lines_bottom: 1
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-2
  concepts:
    - functions
    - single-condition
    - range-loops
    - lists
  contexts:
    - simple-mathematics

beep-boop:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
    4: exceptional
  difficulty: difficulty-2
  concepts:
    - display-text
    - functions
    - multiple-conditions
    - range-loops
    - string-operations

farewell:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-1
  concepts:
    - display-text
    - functions
    - string-operations

pen-picker:
  types:
    - debugging
  number_of_read_only_lines_top: 2
  number_of_read_only_lines_bottom: 1
  test-cases:
    1: normal
    2: normal
    3: normal
  difficulty: difficulty-2
  concepts:
    - functions
    - single-condition
    - lists

lost-cat:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: exceptional
  difficulty: difficulty-2
  concepts:
    - display-text
    - inputs
    - multiple-conditions
    - conditional-loops
    - string-operations

storeys-climbed:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-1
  concepts:
    - display-text
    - inputs
  contexts:
    - simple-mathematics
    - real-world-applications

print-footprints:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
  difficulty: difficulty-1
  concepts:
    - display-text
    - functions
    - string-operations

change-dogs:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-2
  concepts:
    - functions
    - string-operations

form-circle:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
  difficulty: difficulty-1
  concepts:
    - display-text
    - functions
    - string-operations

days-of-coffee:
  types:
    - debugging
  number_of_read_only_lines_top: 2
  number_of_read_only_lines_bottom: 3
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
  difficulty: difficulty-3
  concepts:
    - display-text
    - functions
    - string-operations
  contexts:
    - advanced-mathematics
    - real-world-applications

calculate-mean:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-1
  concepts:
    - functions
    - lists
  contexts:
    - simple-mathematics

address:
  types:
    - program
  test-cases:
    1: normal
    2: normal
    3: normal
    4: exceptional
  difficulty: difficulty-2
  concepts:
    - display-text
    - inputs
    - string-operations
  contexts:
    - real-world-applications

remove-seal:
  types:
    - function
  test-cases:
    1: normal
    2: normal
    3: normal
  difficulty: difficulty-2
  concepts:
    - functions
    - single-condition
    - lists

speeders:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - 'if speed < speed_limit + 4:'
    - 'total + 1'
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
  difficulty: difficulty-2
  concepts:
    - functions
    - single-condition
    - range-loops
    - lists
  contexts:
    - real-world-applications

forest:
  types:
    - debugging
  number_of_read_only_lines_top: 1
  number_of_read_only_lines_bottom: 1
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
    6: normal
  difficulty: difficulty-2
  concepts:
    - functions
    - lists
  contexts:
    - real-world-applications

space-cargo:
  types:
    - function
    - parsons
  parsons-extra-lines:
    - 'print(cargo)'
    - 'ejected_item = cargo.remove()'
  test-cases:
    1: normal
    2: normal
    3: normal
    4: normal
    5: normal
  difficulty: difficulty-3
  concepts:
    - display-text
    - functions
    - lists
  contexts:
    - simple-mathematics
